A Turbogears project can be a bit intimidating to do work on, because... where do I put my code?
Let's look at some of the features of the project, briefly.
In /pub/tg/abchat/abchat are a bunch of directores, the key ones of interest are: "model" "templates" "controllers" "public". Let's look at these one-by-one.
The model directory contains information for the data-model. This is largely related to mapping the SQL database into the python programming language using a tool called SQLAlchemy (google it for more information). It's really useful because then you don't need to use any SQL at all in the project. You can find more information, specifically about interacting with SQLAlchemy at www.sqlalchemy.org/docs/ Scattered about here you can find ways to do everything you need to. For querying the database, see the Querying section, Using the Session is also useful.
The templates directory contains part of the view part of the MVC architecture. The templates contains HTML-based templates which can be returned by the python functions that make up the controller. These templates, when returned, can be populated by information generated by the controller. These templates are largely HTML, but do have some embedded code to handle the data returned. The templates are managed by a tool called Genshi. For more information on Genshi, check out www.genshi.edgewall.org/wiki/Documentation/0.6.x/index.html

In the public directory, you will find the basic things typically found in a "content" type directory. It contains CSS markup files, Javascript files, and images used in the HTML. This is all pretty straightforward.

The last directory, controllers, is the core of the project. This directory contains the heavy-duty data crunching components of the project. In the controllers file are a bunch of Python files which contain some functions. The main file, root.py contains all of the "pages" that people will see. Additional controllers can be mounted to the root to make subdirectories of the main page. In the root controllers are a bunch of functions. These functions are actually the pages of your web application. They take in data, sometimes, and return HTML files, defined by the @expose decorator. The functions actually return dictionaries of data, which are used to populate the genshi templates from before. It can be a bit overwhelming to try and understand what exactly is going on here, but I would suggest you read some more at turbogears.org/2.1/docs Getting Started and Tutorials are a good place to start. I've always found this documentation pretty helpful.

If you have any questions about this, you can e-mail me (Iain), OR, you can also check out any of the above technologies on freenode, if you use IRC. #turbogears contains a bunch of friendly, helpfuly people, the SQLAlchemy folks are very nice too, #sqlalchemy. I haven't used it, but Genshi also has a channel, #python-genshi. If you're having trouble with the whole "Python" thing, #Python is busy 24/7 and pretty helpful.

Hope this was helpful.
